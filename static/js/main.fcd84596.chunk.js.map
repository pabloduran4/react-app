{"version":3,"sources":["CounterApp.js","index.js"],"names":["CounterApp","value","useState","counter","setCounter","onClick","divRoot","document","querySelector","ReactDOM","render"],"mappings":"sLAwDeA,EA9CI,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAGjB,EAA+BC,mBAASD,GAAxC,mBAAOE,EAAP,KAAiBC,EAAjB,KAiBD,OAEC,qCACA,4CACA,4BAAID,IAGJ,wBAAQE,QArBU,WACdD,EAAWD,EAAU,IAoBzB,gBACA,wBAAQE,QAZY,WAChBD,EAAWH,IAWf,mBACA,wBAAQI,QAjBgB,WACpBD,EAAWD,EAAU,IAgBzB,oBCtBEG,G,MAAUC,SAASC,cAAc,UASvCC,IAASC,OAAQ,cAAC,EAAD,CAAYT,MAAO,MAAQK,K","file":"static/js/main.fcd84596.chunk.js","sourcesContent":["//rafcp ! = snipet que crea toda la plantilla\n\n// importando react Para poder usr jsx --imr / importando useState\nimport React, { useState } from 'react';\n\n//Importando proptypes para validar el tipo de dato en los props\nimport PropTypes from 'prop-types';\n\n\n\nconst CounterApp = ({value}) =>{ \n\n    //Hook use State / Desestructurandolo de una ves\n    const [counter , setCounter] = useState(value); // [variable, setVariable]\n\n    // funcion de click\n    const HandleAdd = () =>{\n        setCounter(counter + 1);\n    }\n\n    // tarea funciones\n\n    const HandleSubstract = () =>{\n        setCounter(counter - 1);\n    }\n\n    const HandleReset = () =>{\n        setCounter(value);\n    }\n\n   return(\n\n    <>\n    <h1>CounterApp</h1>\n    <p>{counter}</p>\n\n    {/* //evento click */}\n    <button onClick={ HandleAdd}>+1</button>\n    <button onClick={ HandleReset}>Reset</button>\n    <button onClick={ HandleSubstract}>-1</button>\n\n    </>\n\n   ); \n\n} \n\n //Validando con proptypes\n CounterApp.propTypes = {\n     value: PropTypes.number.isRequired\n }\n\n\n\n\n//Exportando el componente\nexport default CounterApp;\n\n","//Importacion de los archivos necesarios para que react funcione\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n//Importando componentes para renderizar\n// import PrimeraApp from './PrimeraApp';\nimport CounterApp from './CounterApp';\n\n\n\n//Importando estilos\nimport './index.css';\n\n\n\n\n//llamado del root , aca se va a rendereizar toda la app\nconst divRoot = document.querySelector('#root');\n\n\n\n//Metodo de reactDOM para renderizar lo que queremos en react\n//Reenderizando el primer componente , props\n// ReactDOM.render( <PrimeraApp saludo=\"Holaa\"/> , divRoot);\n\n//Tarea CounterApp\nReactDOM.render( <CounterApp value={100}/>, divRoot);"],"sourceRoot":""}